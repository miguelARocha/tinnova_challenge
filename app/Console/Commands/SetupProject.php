<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use Illuminate\Support\Facades\Artisan;

class SetupProject extends Command
{
    protected $signature = 'app:setup';
    protected $description = 'Executa a configura√ß√£o inicial do projeto Laravel';

    
    public function handle()
    {
        $this->info('üîß Iniciando configura√ß√£o do projeto...');

        $this->runArtisanCommand('key:generate', 'Gerando chave da aplica√ß√£o');

        if ($this->confirm('Deseja apagar todas as tabelas e recriar com migrate:fresh?', false)) {
            $this->runArtisanCommand('migrate:fresh', 'Executando migrations com fresh');
        } else {
            $this->runArtisanCommand('migrate', 'Executando migrations');
        }

        if ($this->confirm('Deseja popular o banco de dados com os seeders?', false)) {
            $this->runArtisanCommand('db:seed', 'Executando seeders');
        }

        $this->runArtisanCommand('storage:link', 'Criando link simb√≥lico para o storage');

        $this->runArtisanCommand('config:clear', 'Limpando cache de configura√ß√£o');
        $this->runArtisanCommand('config:cache', 'Gerando cache de configura√ß√£o');

        $this->info('‚úÖ Configura√ß√£o conclu√≠da com sucesso!');

        if ($this->confirm('Deseja iniciar o servidor de desenvolvimento agora?', false)) {
            $this->info('üöÄ Iniciando servidor em http://127.0.0.1:8000 ...');
            passthru('php artisan serve');
        }
    }
    /**
     * Executa um comando Artisan e exibe mensagens apropriadas.
     *
     * @param string $command O comando Artisan a ser executado.'
     */
    protected function runArtisanCommand(string $command, string $mensagem): void
    {
        $this->info("‚û°Ô∏è  $mensagem...");
        $codigo = Artisan::call($command);

        if ($codigo !== 0) {
            $this->error("‚ùå O comando '{$command}' falhou com c√≥digo de sa√≠da {$codigo}.");
        } 
    }
}
